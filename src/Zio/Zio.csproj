<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Description>An abstract/virtual filesystem framework with many built-ins filesystems for .NET</Description>
    <Copyright>Alexandre Mutel</Copyright>
    <AssemblyTitle>Zio</AssemblyTitle>
    <NeutralLanguage>en-US</NeutralLanguage>
    <VersionPrefix>0.3.1</VersionPrefix>
    <Authors>Alexandre Mutel</Authors>
    <TargetFrameworks>net40;net45;netstandard1.3</TargetFrameworks>
    <AssemblyName>Zio</AssemblyName>
    <PackageId>Zio</PackageId>
    <PackageTags>filesystem;vfs;VirtualFileSystem;virtual;abstract;directory;files;io;mock</PackageTags>
    <PackageReleaseNotes>
      &gt; 0.3.1
      - Add IEquatable&lt;FileSystemEntry&gt; to FileSystemEntry
      &gt; 0.3.0
      - Add AggregateFileSystem.ClearFileSystems and AggregateFileSystem.FindFileSystemEntries
      - Add FileEntry.ReadAllText/WriteAllText/AppendAllText/ReadAllBytes/WriteAllBytes 
      &gt; 0.2.0
      - Fix directory/file locking issue in MemoryFileSystem
      &gt; 0.1.0
      - Initial version
    </PackageReleaseNotes>
    <PackageIconUrl>https://raw.githubusercontent.com/xoofx/zio/master/img/zio.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/xoofx/zio</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/xoofx/zio/blob/master/license.txt</PackageLicenseUrl>
    <DebugType>Full</DebugType>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.3'">
    <PackageReference Include="System.IO.FileSystem.DriveInfo" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45'">
    <Reference Include="System.IO.Compression" />
  </ItemGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.3'">
    <DefineConstants>$(AdditionalConstants);NETSTANDARD;HAS_ZIPARCHIVE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net45'">
    <DefineConstants>$(AdditionalConstants);NET45;HAS_ZIPARCHIVE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net40'">
    <DefineConstants>$(AdditionalConstants);NET40</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
</Project>